name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  checkout:
    runs-on: ubuntu-latest
    outputs:
      working-directory: ${{ steps.checkout.outputs.working-directory }}
    steps:
      - name: Checkout code
        id: checkout
        uses: actions/checkout@v4
      - name: Print working directory
        run: pwd
      - name: List files
        run: ls -al

  lint:
    runs-on: ubuntu-20.04
    needs: checkout
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run DevSkim scanner
        uses: microsoft/DevSkim-Action@v1
      - name: Upload DevSkim scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: devskim-results.sarif



  docker-build-and-push-adservice:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: List files in context directory
        run: ls -la ./src/adservice/
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: sharuelement/adservice:latest
          context: ./src/adservice/

  


  docker-build-and-push-cartservice:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: List files in context directory
        run: ls -la ./src/cartservice/src/
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: sharuelement/cartservice:latest
          context: ./src/cartservice/src/

 

  docker-build-and-push-checkoutservice:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: List files in context directory
        run: ls -la ./src/checkoutservice/
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: sharuelement/checkoutservice:latest
          context: ./src/checkoutservice/

  docker-build-and-push-currencyservice:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: List files in context directory
        run: ls -la ./src/currencyservice/
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: sharuelement/currencyservice:latest
          context: ./src/currencyservice/

  docker-build-and-push-emailservice:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: List files in context directory
        run: ls -la ./src/emailservice/
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: sharuelement/emailservice:latest
          context: ./src/emailservice/

  docker-build-and-push-frontend:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: List files in context directory
        run: ls -la ./src/frontend/
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: sharuelement/frontend:latest
          context: ./src/frontend/

  docker-build-and-push-loadgenerator:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: List files in context directory
        run: ls -la ./src/loadgenerator/
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: sharuelement/loadgenerator:latest
          context: ./src/loadgenerator/

  docker-build-and-push-paymentservice:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: List files in context directory
        run: ls -la ./src/paymentservice/
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: sharuelement/paymentservice:latest
          context: ./src/paymentservice/

  docker-build-and-push-productcatalogservice:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: List files in context directory
        run: ls -la ./src/productcatalogservice/
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: sharuelement/productcatalogservice:latest
          context: ./src/productcatalogservice/

  docker-build-and-push-recommendationservice:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: List files in context directory
        run: ls -la ./src/recommendationservice/
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: sharuelement/recommendationservice:latest
          context: ./src/recommendationservice/

  docker-build-and-push-shippingservice:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: List files in context directory
        run: ls -la ./src/shippingservice/
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: sharuelement/shippingservice:latest
          context: ./src/shippingservice/


  trivy-scan:
    runs-on: ubuntu-latest
    needs: docker-build-and-push-shippingservice

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget jq

      - name: Install Trivy
        run: |
          TRIVY_VERSION=$(curl -sL https://api.github.com/repos/aquasecurity/trivy/releases/latest | jq -r .tag_name)
          echo "Installing Trivy version: $TRIVY_VERSION"
          wget "https://github.com/aquasecurity/trivy/releases/download/${TRIVY_VERSION}/trivy_${TRIVY_VERSION:1}_Linux_x86_64.deb" || {
            echo "Failed to download Trivy, falling back to latest release."
            LATEST_VERSION=$(curl -sL https://api.github.com/repos/aquasecurity/trivy/releases | jq -r '.[0].tag_name')
            wget "https://github.com/aquasecurity/trivy/releases/download/${LATEST_VERSION}/trivy_${LATEST_VERSION:1}_Linux_x86_64.deb"
          }
          sudo dpkg -i trivy_${TRIVY_VERSION:1}_Linux_x86_64.deb || {
            echo "Installation of Trivy failed."
            exit 1
          }

      - name: Scan Docker Image
        env:
          IMAGE_NAME: sharuelement/shippingservice:latest
        run: |
          trivy image --format json --output trivy-report.json $IMAGE_NAME

      - name: Upload Trivy Report
        uses: actions/upload-artifact@v3
        with:
          name: trivy-report
          path: trivy-report.json
