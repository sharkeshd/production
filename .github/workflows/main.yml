name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  checkout:
    runs-on: ubuntu-latest
    outputs:
      working-directory: ${{ steps.checkout.outputs.working-directory }}
    steps:
      - name: Checkout code
        id: checkout
        uses: actions/checkout@v4
      - name: Print working directory
        run: pwd
      - name: List files
        run: ls -al

  lint:
    runs-on: ubuntu-20.04
    needs: checkout
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run DevSkim scanner
        uses: microsoft/DevSkim-Action@v1
      - name: Upload DevSkim scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: devskim-results.sarif

  gradle-build:
    runs-on: ubuntu-latest
    needs: lint
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Make Gradle Wrapper Executable
        run: chmod +x ./gradlew || true
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Build with Gradle Wrapper
        run: |
          ./gradlew downloadRepos || true
          ./gradlew installDist || true

  gradle-test:
    runs-on: ubuntu-latest
    needs: gradle-build
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Make Gradle Wrapper Executable
        run: chmod +x ./gradlew || true
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Gradle Tests
        run: ./gradlew test || true

  docker-build-and-push-adservice:
    runs-on: ubuntu-latest
    needs: gradle-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: List files in context directory
        run: ls -la ./src/adservice/
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: sharuelement/adservice:latest
          context: ./src/adservice/

  dotnet-build-cartservice:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x'
      - name: Build with .NET for cartservice
        run: |
          cd src/cartservice
          dotnet restore
          dotnet build --no-restore

  dotnet-test:
    runs-on: ubuntu-latest
    needs: dotnet-build-cartservice
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x'
      - name: Run .NET Tests for cartservice
        run: |
          cd src/cartservice
          dotnet test --no-build --verbosity normal

  install-trivy:
    runs-on: ubuntu-latest
    needs: dotnet-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/download/v0.35.0/trivy_0.35.0_Linux-64bit.deb
          sudo dpkg -i trivy_0.35.0_Linux-64bit.deb
          sudo apt-get install -f  # Fix dependencies
          trivy --version

  trivy-scan-adservice:
    runs-on: ubuntu-latest
    needs: install-trivy
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Trivy scan for adservice
        run: |
          trivy fs --exit-code 1 --no-progress . > new/trivy-adservice-results.txt || true
        working-directory: ./src/adservice/
        continue-on-error: true

  docker-build-and-push-cartservice:
    runs-on: ubuntu-latest
    needs: trivy-scan-adservice
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: List files in context directory
        run: ls -la ./src/cartservice/src/
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: sharuelement/cartservice:latest
          context: ./src/cartservice/src/

  go-build:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        go-version: [ '1.19', '1.20', '1.21.3' ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Print Go version
        run: go version

  docker-build-and-push-checkoutservice:
    runs-on: ubuntu-latest
    needs: go-build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: List files in context directory
        run: ls -la ./src/checkoutservice/
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: sharuelement/checkoutservice:latest
          context: ./src/checkoutservice/

    nodejs-build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install dependencies
        run: npm ci
      - name: Build project
        run: npm run build --if-present
      - name: Run tests
        run: npm test
